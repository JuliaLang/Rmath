environment:
  matrix:
  - ARCH: "i686"
    CCPATH: 'C:\mingw-w64\i686-6.3.0-posix-dwarf-rt_v5-rev1\mingw32\bin'
    JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x86/julia-latest-win32.exe"
    
  - ARCH: "x86_64"
    CCPATH: 'C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin'
    JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x64/julia-latest-win64.exe"

skip_branch_with_pr: true

skip_commits:
# Add [av skip] to commit messages for docfixes, etc to reduce load on queue
  message: /\[av skip\]/

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

# fetch repository as zip archive
shallow_clone: true
# set clone depth
clone_depth: 5

init:
# Carriage returns are bad
  - git config --global core.autocrlf input

build_script:
  - set PATH=%CCPATH%;%PATH%
  - mingw32-make

after_build:
  - ps: $env:VERSION = If ($env:APPVEYOR_REPO_TAG) {$env:APPVEYOR_REPO_TAG_NAME} Else {$env:APPVEYOR_REPO_COMMIT.Substring(0, 10)}
  - 7z a libRmath-julia-%ARCH%-%VERSION%.zip %APPVEYOR_BUILD_FOLDER%\src\libRmath-julia.dll

before_test:
# Download most recent Julia Windows binary
  - ps: "[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12"
  - ps: (new-object net.webclient).DownloadFile(
        $env:JULIA_URL,
        "C:\projects\julia-binary.exe")
# Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia
  - C:\projects\julia\bin\julia -e "versioninfo()"

test_script:
# Run test file
  - set PATH= 
  - C:\projects\julia\bin\julia test.jl

artifacts:
  - path: libRmath-julia-*.zip

on_finish:
# uncomment to enable RDP to Appveyor
  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

# mingw-w64.bat